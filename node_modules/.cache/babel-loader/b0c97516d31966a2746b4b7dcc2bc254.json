{"ast":null,"code":"var _jsxFileName = \"/Users/pragaur2/git/card-app/src/components/card/card.component.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { StyledCard, StyledBtn } from './styles';\nimport CardDataContext from '../../context/card-data.context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card({\n  cardName,\n  pos,\n  currentIndex\n}) {\n  _s();\n\n  const {\n    listData,\n    setListData\n  } = React.useContext(CardDataContext);\n\n  const shiftCard = (event, pos, direction) => {\n    const value = listData[pos][currentIndex];\n    const targetColumn = direction === 'left' ? pos - 1 : pos + 1;\n    const newList = new Array(4).fill([]).map(() => new Array(0));\n    newList = listData;\n    newList[targetColumn].push(value);\n    newList[pos].splice(currentIndex, 1);\n    console.log(newList, newList[pos], newList[pos].length);\n    setListData(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledCard, {\n    children: [!!pos && pos > 0 && /*#__PURE__*/_jsxDEV(StyledBtn, {\n      onClick: event => shiftCard(event, pos, 'left'),\n      children: ` < `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: cardName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), pos !== 3 && /*#__PURE__*/_jsxDEV(StyledBtn, {\n      onClick: event => shiftCard(event, pos, 'right'),\n      children: ` > `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Card, \"RFvyZrGXtB7MoBAT8PVwfh5cCVs=\");\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/pragaur2/git/card-app/src/components/card/card.component.tsx"],"names":["React","StyledCard","StyledBtn","CardDataContext","Card","cardName","pos","currentIndex","listData","setListData","useContext","shiftCard","event","direction","value","targetColumn","newList","Array","fill","map","push","splice","console","log","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,UAAtC;AACA,OAAOC,eAAP,MAA4B,iCAA5B;;AAEA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA,QAAD;AAAWC,EAAAA,GAAX;AAAgBC,EAAAA;AAAhB,CAAd,EAAmD;AAAA;;AAC9D,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAA0BT,KAAK,CAACU,UAAN,CAAiBP,eAAjB,CAAhC;;AACA,QAAMQ,SAAS,GAAG,CAACC,KAAD,EAAaN,GAAb,EAA0BO,SAA1B,KAAgD;AAC9D,UAAMC,KAAK,GAAGN,QAAQ,CAACF,GAAD,CAAR,CAAcC,YAAd,CAAd;AACA,UAAMQ,YAAY,GAAGF,SAAS,KAAK,MAAd,GAAuBP,GAAG,GAAG,CAA7B,GAAiCA,GAAG,GAAG,CAA5D;AACA,UAAMU,OAAO,GAAG,IAAIC,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,EAAlB,EAAsBC,GAAtB,CAA0B,MAAM,IAAIF,KAAJ,CAAU,CAAV,CAAhC,CAAhB;AACAD,IAAAA,OAAO,GAAGR,QAAV;AACAQ,IAAAA,OAAO,CAACD,YAAD,CAAP,CAAsBK,IAAtB,CAA2BN,KAA3B;AACAE,IAAAA,OAAO,CAACV,GAAD,CAAP,CAAae,MAAb,CAAoBd,YAApB,EAAkC,CAAlC;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ,EAAqBA,OAAO,CAACV,GAAD,CAA5B,EAAmCU,OAAO,CAACV,GAAD,CAAP,CAAakB,MAAhD;AACAf,IAAAA,WAAW,CAACO,OAAD,CAAX;AACH,GATD;;AAWA,sBAAQ,QAAC,UAAD;AAAA,eACF,CAAC,CAACV,GAAF,IAASA,GAAG,GAAG,CAAf,iBACE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEM,KAAK,IAAID,SAAS,CAACC,KAAD,EAAQN,GAAR,EAAa,MAAb,CAAtC;AAAA,gBAA8D;AAA9D;AAAA;AAAA;AAAA;AAAA,YAFA,eAIJ;AAAA,gBAAOD;AAAP;AAAA;AAAA;AAAA;AAAA,YAJI,EAKFC,GAAG,KAAK,CAAR,iBACE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEM,KAAK,IAAID,SAAS,CAACC,KAAD,EAAQN,GAAR,EAAa,OAAb,CAAtC;AAAA,gBAA+D;AAA/D;AAAA;AAAA;AAAA;AAAA,YANA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AASH;;GAtBuBF,I;;KAAAA,I","sourcesContent":["import React from 'react';\nimport { StyledCard, StyledBtn } from './styles';\nimport CardDataContext from '../../context/card-data.context';\n\nexport default function Card({cardName, pos, currentIndex} : any) {\n    const {listData, setListData} = React.useContext(CardDataContext);\n    const shiftCard = (event: any, pos: number, direction: string) => {\n        const value = listData[pos][currentIndex];\n        const targetColumn = direction === 'left' ? pos - 1 : pos + 1;\n        const newList = new Array(4).fill([]).map(() => new Array(0));\n        newList = listData;\n        newList[targetColumn].push(value);\n        newList[pos].splice(currentIndex, 1);\n        console.log(newList, newList[pos], newList[pos].length);\n        setListData(newList);\n    };\n\n    return (<StyledCard>\n        { !!pos && pos > 0 &&\n            <StyledBtn onClick={event => shiftCard(event, pos, 'left')}>{` < `}</StyledBtn>\n        }\n        <span>{cardName}</span>\n        { pos !== 3 &&\n            <StyledBtn onClick={event => shiftCard(event, pos, 'right')}>{` > `}</StyledBtn>\n        }\n    </StyledCard>);\n}\n"]},"metadata":{},"sourceType":"module"}