{"ast":null,"code":"var _jsxFileName = \"/Users/pragaur2/git/card-app/src/components/header/header.component.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CardList from '../card/cards-list.component';\nimport { members } from './../../config/config';\nimport { StyledList, Wrapper, StyledHeader, StyledButton, StyledFooter, StyledConfirmButton, StyledInput, StyledLabel, StyledHeading } from './styles';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = () => {\n  _s();\n\n  const customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      boxShadow: '0px 11px 15px -7px rgb(0 0 0 / 20%), 0px 24px 38px 3px rgb(0 0 0 / 14%), 0px 9px 46px 8px rgb(0 0 0 / 12%)'\n    }\n  };\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [newListItem, setListItem] = useState('');\n  const matrix = new Array(4).fill([]).map(() => new Array(0));\n  const [listData, setListData] = useState(matrix);\n\n  const closeModal = () => {\n    setListItem(\"\");\n    setIsOpen(false);\n  };\n\n  const openModal = index => {\n    setIsOpen(true);\n    setActiveIndex(index);\n  };\n\n  const handleAddList = index => {\n    console.log('list added to', index);\n    openModal(index);\n  };\n\n  const updateDialogText = event => {\n    console.log(event.target.value);\n    setListItem(event.target.value);\n  };\n\n  const updateList = () => {\n    console.log(newListItem);\n\n    if (newListItem !== '') {\n      console.log('newList', listData);\n      const newList = listData;\n      newList[activeIndex].push(newListItem);\n      setListData(newList);\n    }\n\n    setListItem(\"\");\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [members.map((member, index = 0) => {\n      return /*#__PURE__*/_jsxDEV(StyledList, {\n        children: [/*#__PURE__*/_jsxDEV(StyledHeader, {\n          color: member.hexCode,\n          children: member.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(CardList, {\n          cardsInfo: member,\n          colIndex: index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n          onClick: () => handleAddList(index),\n          children: \"Add a card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      contentLabel: \"Example Modal\",\n      style: customStyles,\n      children: [/*#__PURE__*/_jsxDEV(StyledHeading, {\n        children: [\"Add a card in team \", members[activeIndex].name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(StyledLabel, {\n        htmlFor: \"cardTxt\",\n        children: \"Enter card value:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n        id: \"cardTxt\",\n        onChange: event => updateDialogText(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(StyledFooter, {\n        children: [/*#__PURE__*/_jsxDEV(StyledConfirmButton, {\n          onClick: updateList,\n          children: \"ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(StyledConfirmButton, {\n          onClick: closeModal,\n          children: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Header, \"vAAJshsp2uUcGrtKHprlb2bY+h0=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/pragaur2/git/card-app/src/components/header/header.component.tsx"],"names":["React","useState","CardList","members","StyledList","Wrapper","StyledHeader","StyledButton","StyledFooter","StyledConfirmButton","StyledInput","StyledLabel","StyledHeading","Modal","Header","customStyles","content","top","left","right","bottom","marginRight","transform","boxShadow","modalIsOpen","setIsOpen","activeIndex","setActiveIndex","newListItem","setListItem","matrix","Array","fill","map","listData","setListData","closeModal","openModal","index","handleAddList","console","log","updateDialogText","event","target","value","updateList","newList","push","member","hexCode","name"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useState } from 'react';\nimport CardList from '../card/cards-list.component';\nimport { members } from './../../config/config';\nimport { StyledList, Wrapper, StyledHeader, StyledButton, StyledFooter, StyledConfirmButton, StyledInput, StyledLabel, StyledHeading } from './styles';\nimport Modal from 'react-modal';\n\nconst Header = () => {\n\n\tconst customStyles = {\n\t\tcontent: {\n\t\t\ttop: '50%',\n\t\t\tleft: '50%',\n\t\t\tright: 'auto',\n\t\t\tbottom: 'auto',\n\t\t\tmarginRight: '-50%',\n\t\t\ttransform: 'translate(-50%, -50%)',\n\t\t\tboxShadow: '0px 11px 15px -7px rgb(0 0 0 / 20%), 0px 24px 38px 3px rgb(0 0 0 / 14%), 0px 9px 46px 8px rgb(0 0 0 / 12%)'\n\t\t},\n\t};\n\n\n\tconst [modalIsOpen, setIsOpen] = useState(false);\n\tconst [activeIndex, setActiveIndex] = useState(0);\n\tconst [newListItem, setListItem] = useState('');\n\n\tconst matrix = new Array(4).fill([]).map(() => new Array(0));\n\tconst [listData, setListData] = useState(matrix);\n\n\tconst closeModal = () => {\n\t\tsetListItem(\"\");\n\t\tsetIsOpen(false);\n\t}\n\n\tconst openModal = (index: number) => {\n\t\tsetIsOpen(true);\n\t\tsetActiveIndex(index);\n\t}\n\n\tconst handleAddList = (index: number) => {\n\t\tconsole.log('list added to', index);\n\t\topenModal(index);\n\t}\n\n\tconst updateDialogText = (event: ChangeEvent<HTMLInputElement>) => {\n\t\tconsole.log(event.target.value);\n\t\tsetListItem(event.target.value);\n\t}\n\n\tconst updateList = () => {\n\t\tconsole.log(newListItem);\n\t\tif (newListItem !== '') {\n\t\t\tconsole.log('newList', listData);\n\t\t\tconst newList = listData;\n\t\t\tnewList[activeIndex].push(newListItem);\n\t\t\tsetListData(newList);\n\t\t}\n\t\tsetListItem(\"\");\n\t\tsetIsOpen(false);\n\t};\n\n\treturn (<Wrapper>\n\t\t{members.map((member, index: number = 0) => {\n\t\t\treturn <StyledList>\n\t\t\t\t<StyledHeader color={member.hexCode}>{member.name}</StyledHeader>\n\t\t\t\t<CardList cardsInfo={member} colIndex={index}></CardList>\n\t\t\t\t<StyledButton onClick={() => handleAddList(index)}>Add a card</StyledButton>\n\t\t\t</StyledList>\n\t\t})}\n\t\t<Modal\n\t\t\tisOpen={modalIsOpen}\n\t\t\tonRequestClose={closeModal}\n\t\t\tcontentLabel=\"Example Modal\"\n\t\t\tstyle={customStyles}\n\t\t>\n\t\t\t<StyledHeading>Add a card in team {members[activeIndex].name}</StyledHeading>\n\t\t\t<StyledLabel htmlFor='cardTxt'>Enter card value:</StyledLabel>\n\t\t\t<StyledInput id='cardTxt' onChange={(event) => updateDialogText(event)}></StyledInput>\n\t\t\t<StyledFooter>\n\t\t\t\t<StyledConfirmButton onClick={updateList}>ok</StyledConfirmButton>\n\t\t\t\t<StyledConfirmButton onClick={closeModal}>close</StyledConfirmButton>\n\t\t\t</StyledFooter>\n\t\t</Modal>\n\t</Wrapper>);\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}