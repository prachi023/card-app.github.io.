{"ast":null,"code":"var _jsxFileName = \"/Users/pragaur2/git/card-app.github.io./src/components/card/card.component.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { StyledCard, StyledBtn } from './styles';\nimport CardDataContext from '../../context/card-data.context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card({\n  cardName,\n  pos,\n  currentIndex\n}) {\n  _s();\n\n  const {\n    listData,\n    setListData\n  } = React.useContext(CardDataContext);\n\n  const shiftCard = (event, pos, direction) => {\n    const value = listData[pos][currentIndex];\n    const targetColumn = direction === 'left' ? pos - 1 : pos + 1;\n    let newList = { ...listData\n    };\n    newList[targetColumn].push(value);\n    newList[pos].splice(currentIndex, 1);\n    window.localStorage.setItem('listData', JSON.stringify(newList));\n    setListData(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledCard, {\n    children: [!!pos && pos > 0 && /*#__PURE__*/_jsxDEV(StyledBtn, {\n      onClick: event => shiftCard(event, pos, 'left'),\n      children: ` < `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: cardName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }, this), pos !== 3 && /*#__PURE__*/_jsxDEV(StyledBtn, {\n      onClick: event => shiftCard(event, pos, 'right'),\n      children: ` > `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Card, \"RFvyZrGXtB7MoBAT8PVwfh5cCVs=\");\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/pragaur2/git/card-app.github.io./src/components/card/card.component.tsx"],"names":["React","StyledCard","StyledBtn","CardDataContext","Card","cardName","pos","currentIndex","listData","setListData","useContext","shiftCard","event","direction","value","targetColumn","newList","push","splice","window","localStorage","setItem","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,UAAtC;AACA,OAAOC,eAAP,MAA4B,iCAA5B;;AAEA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA,QAAD;AAAWC,EAAAA,GAAX;AAAgBC,EAAAA;AAAhB,CAAd,EAAmD;AAAA;;AACjE,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAA0BT,KAAK,CAACU,UAAN,CAAiBP,eAAjB,CAAhC;;AACA,QAAMQ,SAAS,GAAG,CAACC,KAAD,EAAaN,GAAb,EAA0BO,SAA1B,KAAgD;AACjE,UAAMC,KAAK,GAAGN,QAAQ,CAACF,GAAD,CAAR,CAAcC,YAAd,CAAd;AACA,UAAMQ,YAAY,GAAGF,SAAS,KAAK,MAAd,GAAuBP,GAAG,GAAG,CAA7B,GAAiCA,GAAG,GAAG,CAA5D;AACA,QAAIU,OAAO,GAAG,EAAC,GAAGR;AAAJ,KAAd;AACAQ,IAAAA,OAAO,CAACD,YAAD,CAAP,CAAsBE,IAAtB,CAA2BH,KAA3B;AACAE,IAAAA,OAAO,CAACV,GAAD,CAAP,CAAaY,MAAb,CAAoBX,YAApB,EAAkC,CAAlC;AACAY,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,EAAwCC,IAAI,CAACC,SAAL,CAAeP,OAAf,CAAxC;AACAP,IAAAA,WAAW,CAACO,OAAD,CAAX;AACA,GARD;;AAUA,sBAAQ,QAAC,UAAD;AAAA,eACL,CAAC,CAACV,GAAF,IAASA,GAAG,GAAG,CAAf,iBACD,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEM,KAAK,IAAID,SAAS,CAACC,KAAD,EAAQN,GAAR,EAAa,MAAb,CAAtC;AAAA,gBAA8D;AAA9D;AAAA;AAAA;AAAA;AAAA,YAFM,eAIP;AAAA,gBAAOD;AAAP;AAAA;AAAA;AAAA;AAAA,YAJO,EAKLC,GAAG,KAAK,CAAR,iBACD,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEM,KAAK,IAAID,SAAS,CAACC,KAAD,EAAQN,GAAR,EAAa,OAAb,CAAtC;AAAA,gBAA+D;AAA/D;AAAA;AAAA;AAAA;AAAA,YANM;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AASA;;GArBuBF,I;;KAAAA,I","sourcesContent":["import React from 'react';\nimport { StyledCard, StyledBtn } from './styles';\nimport CardDataContext from '../../context/card-data.context';\n\nexport default function Card({cardName, pos, currentIndex} : any) {\n\tconst {listData, setListData} = React.useContext(CardDataContext);\n\tconst shiftCard = (event: any, pos: number, direction: string) => {\n\t\tconst value = listData[pos][currentIndex];\n\t\tconst targetColumn = direction === 'left' ? pos - 1 : pos + 1;\n\t\tlet newList = {...listData};\n\t\tnewList[targetColumn].push(value);\n\t\tnewList[pos].splice(currentIndex, 1);\n\t\twindow.localStorage.setItem('listData', JSON.stringify(newList));\n\t\tsetListData(newList);\n\t};\n\n\treturn (<StyledCard>\n\t\t{ !!pos && pos > 0 &&\n\t\t\t<StyledBtn onClick={event => shiftCard(event, pos, 'left')}>{` < `}</StyledBtn>\n\t\t}\n\t\t<span>{cardName}</span>\n\t\t{ pos !== 3 &&\n\t\t\t<StyledBtn onClick={event => shiftCard(event, pos, 'right')}>{` > `}</StyledBtn>\n\t\t}\n\t</StyledCard>);\n}\n"]},"metadata":{},"sourceType":"module"}