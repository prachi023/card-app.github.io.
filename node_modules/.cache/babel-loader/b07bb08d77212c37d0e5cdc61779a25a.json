{"ast":null,"code":"import _slicedToArray from\"/Users/pragaur2/git/card-app.github.io./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import CardList from'../card/cards-list.component';import{members}from'../../config/config';import{StyledList,Wrapper,StyledHeader,StyledButton,StyledFooter,StyledConfirmButton,StyledInput,StyledLabel,StyledHeading}from'./styles';import Modal from'react-modal';import CardDataContext from'../../context/card-data.context';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Container=function Container(){var customStyles={content:{top:'50%',left:'50%',right:'auto',bottom:'auto',marginRight:'-50%',transform:'translate(-50%, -50%)',boxShadow:'0px 11px 15px -7px rgb(0 0 0 / 20%), 0px 24px 38px 3px rgb(0 0 0 / 14%), 0px 9px 46px 8px rgb(0 0 0 / 12%)'}};var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modalIsOpen=_useState2[0],setIsOpen=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),activeIndex=_useState4[0],setActiveIndex=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),newListItem=_useState6[0],setListItem=_useState6[1];var savedListData=window.localStorage.getItem(\"listData\");var initListData=typeof savedListData==='string'?JSON.parse(savedListData):new Array(4).fill([]).map(function(){return new Array(0);});var _useState7=useState(initListData),_useState8=_slicedToArray(_useState7,2),listData=_useState8[0],setListData=_useState8[1];var value={listData:listData,setListData:setListData};var closeModal=function closeModal(){setListItem(\"\");setIsOpen(false);};var openModal=function openModal(index){setIsOpen(true);setActiveIndex(index);};var handleAddList=function handleAddList(index){console.log('list added to',index);openModal(index);};var updateDialogText=function updateDialogText(event){console.log(event.target.value);setListItem(event.target.value);};var updateList=function updateList(){console.log(newListItem);if(newListItem!==''){console.log('newList',listData);var newList=listData;newList[activeIndex].push(newListItem);setListData(newList);window.localStorage.setItem('listData',JSON.stringify(newList));}setListItem(\"\");setIsOpen(false);};return/*#__PURE__*/_jsx(Wrapper,{children:/*#__PURE__*/_jsxs(CardDataContext.Provider,{value:value,children:[members.map(function(member){var index=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;return/*#__PURE__*/_jsxs(StyledList,{children:[/*#__PURE__*/_jsx(StyledHeader,{color:member.hexCode,children:member.name}),/*#__PURE__*/_jsx(CardList,{cardsInfo:listData[index],colIndex:index}),/*#__PURE__*/_jsx(StyledButton,{onClick:function onClick(){return handleAddList(index);},children:\"Add a card\"})]});}),/*#__PURE__*/_jsxs(Modal,{isOpen:modalIsOpen,onRequestClose:closeModal,contentLabel:\"Example Modal\",style:customStyles,children:[/*#__PURE__*/_jsxs(StyledHeading,{children:[\"Add a card in team \",members[activeIndex].name]}),/*#__PURE__*/_jsx(StyledLabel,{htmlFor:\"cardTxt\",children:\"Enter card value:\"}),/*#__PURE__*/_jsx(StyledInput,{id:\"cardTxt\",onBlur:function onBlur(event){return updateDialogText(event);}}),/*#__PURE__*/_jsxs(StyledFooter,{children:[/*#__PURE__*/_jsx(StyledConfirmButton,{onClick:updateList,children:\"ok\"}),/*#__PURE__*/_jsx(StyledConfirmButton,{onClick:closeModal,children:\"close\"})]})]})]})});};export default Container;","map":{"version":3,"sources":["/Users/pragaur2/git/card-app.github.io./src/components/container/container.component.tsx"],"names":["React","useState","CardList","members","StyledList","Wrapper","StyledHeader","StyledButton","StyledFooter","StyledConfirmButton","StyledInput","StyledLabel","StyledHeading","Modal","CardDataContext","Container","customStyles","content","top","left","right","bottom","marginRight","transform","boxShadow","modalIsOpen","setIsOpen","activeIndex","setActiveIndex","newListItem","setListItem","savedListData","window","localStorage","getItem","initListData","JSON","parse","Array","fill","map","listData","setListData","value","closeModal","openModal","index","handleAddList","console","log","updateDialogText","event","target","updateList","newList","push","setItem","stringify","member","hexCode","name"],"mappings":"8JAAA,MAAOA,CAAAA,KAAP,EAA6BC,QAA7B,KAA6C,OAA7C,CACA,MAAOC,CAAAA,QAAP,KAAqB,8BAArB,CACA,OAASC,OAAT,KAAwB,qBAAxB,CACA,OAASC,UAAT,CAAqBC,OAArB,CAA8BC,YAA9B,CAA4CC,YAA5C,CAA0DC,YAA1D,CAAwEC,mBAAxE,CAA6FC,WAA7F,CAA0GC,WAA1G,CAAuHC,aAAvH,KAA4I,UAA5I,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,eAAP,KAA4B,iCAA5B,C,wFAGA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAEvB,GAAMC,CAAAA,YAAY,CAAG,CACpBC,OAAO,CAAE,CACRC,GAAG,CAAE,KADG,CAERC,IAAI,CAAE,KAFE,CAGRC,KAAK,CAAE,MAHC,CAIRC,MAAM,CAAE,MAJA,CAKRC,WAAW,CAAE,MALL,CAMRC,SAAS,CAAE,uBANH,CAORC,SAAS,CAAE,4GAPH,CADW,CAArB,CAaA,cAAiCvB,QAAQ,CAAC,KAAD,CAAzC,wCAAOwB,WAAP,eAAoBC,SAApB,eACA,eAAsCzB,QAAQ,CAAC,CAAD,CAA9C,yCAAO0B,WAAP,eAAoBC,cAApB,eACA,eAAmC3B,QAAQ,CAAC,EAAD,CAA3C,yCAAO4B,WAAP,eAAoBC,WAApB,eAEA,GAAMC,CAAAA,aAAa,CAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAtB,CACA,GAAMC,CAAAA,YAAkC,CAAE,MAAOJ,CAAAA,aAAP,GAAyB,QAAzB,CAAoCK,IAAI,CAACC,KAAL,CAAWN,aAAX,CAApC,CAAgE,GAAIO,CAAAA,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,EAAlB,EAAsBC,GAAtB,CAA0B,iBAAM,IAAIF,CAAAA,KAAJ,CAAU,CAAV,CAAN,EAA1B,CAA1G,CACA,eAAgCrC,QAAQ,CAAakC,YAAb,CAAxC,yCAAOM,QAAP,eAAiBC,WAAjB,eAEA,GAAMC,CAAAA,KAAmB,CAAG,CAACF,QAAQ,CAARA,QAAD,CAAWC,WAAW,CAAXA,WAAX,CAA5B,CAEA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACxBd,WAAW,CAAC,EAAD,CAAX,CACAJ,SAAS,CAAC,KAAD,CAAT,CACA,CAHD,CAKA,GAAMmB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAmB,CACpCpB,SAAS,CAAC,IAAD,CAAT,CACAE,cAAc,CAACkB,KAAD,CAAd,CACA,CAHD,CAKA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACD,KAAD,CAAmB,CACxCE,OAAO,CAACC,GAAR,CAAY,eAAZ,CAA6BH,KAA7B,EACAD,SAAS,CAACC,KAAD,CAAT,CACA,CAHD,CAKA,GAAMI,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAA0C,CAClEH,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,MAAN,CAAaT,KAAzB,EACAb,WAAW,CAACqB,KAAK,CAACC,MAAN,CAAaT,KAAd,CAAX,CACA,CAHD,CAKA,GAAMU,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACxBL,OAAO,CAACC,GAAR,CAAYpB,WAAZ,EACA,GAAIA,WAAW,GAAK,EAApB,CAAwB,CACvBmB,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBR,QAAvB,EACA,GAAMa,CAAAA,OAA6B,CAAGb,QAAtC,CACAa,OAAO,CAAC3B,WAAD,CAAP,CAAqB4B,IAArB,CAA0B1B,WAA1B,EACAa,WAAW,CAACY,OAAD,CAAX,CACAtB,MAAM,CAACC,YAAP,CAAoBuB,OAApB,CAA4B,UAA5B,CAAwCpB,IAAI,CAACqB,SAAL,CAAeH,OAAf,CAAxC,EACA,CACDxB,WAAW,CAAC,EAAD,CAAX,CACAJ,SAAS,CAAC,KAAD,CAAT,CACA,CAXD,CAaA,mBAAQ,KAAC,OAAD,wBACP,MAAC,eAAD,CAAiB,QAAjB,EAA0B,KAAK,CAAEiB,KAAjC,WACCxC,OAAO,CAACqC,GAAR,CAAY,SAACkB,MAAD,CAA+B,IAAtBZ,CAAAA,KAAsB,2DAAN,CAAM,CAC3C,mBAAO,MAAC,UAAD,yBACN,KAAC,YAAD,EAAc,KAAK,CAAEY,MAAM,CAACC,OAA5B,UAAsCD,MAAM,CAACE,IAA7C,EADM,cAEN,KAAC,QAAD,EAAU,SAAS,CAAEnB,QAAQ,CAACK,KAAD,CAA7B,CAAsC,QAAQ,CAAEA,KAAhD,EAFM,cAGN,KAAC,YAAD,EAAc,OAAO,CAAE,yBAAMC,CAAAA,aAAa,CAACD,KAAD,CAAnB,EAAvB,wBAHM,GAAP,CAKA,CANA,CADD,cASA,MAAC,KAAD,EACC,MAAM,CAAErB,WADT,CAEC,cAAc,CAAEmB,UAFjB,CAGC,YAAY,CAAC,eAHd,CAIC,KAAK,CAAE5B,YAJR,wBAMC,MAAC,aAAD,kCAAmCb,OAAO,CAACwB,WAAD,CAAP,CAAqBiC,IAAxD,GAND,cAOC,KAAC,WAAD,EAAa,OAAO,CAAC,SAArB,+BAPD,cAQC,KAAC,WAAD,EAAa,EAAE,CAAC,SAAhB,CAA0B,MAAM,CAAE,gBAACT,KAAD,QAAWD,CAAAA,gBAAgB,CAACC,KAAD,CAA3B,EAAlC,EARD,cASC,MAAC,YAAD,yBACC,KAAC,mBAAD,EAAqB,OAAO,CAAEE,UAA9B,gBADD,cAEC,KAAC,mBAAD,EAAqB,OAAO,CAAET,UAA9B,mBAFD,GATD,GATA,GADO,EAAR,CA2BA,CArFD,CAuFA,cAAe7B,CAAAA,SAAf","sourcesContent":["import React, { ChangeEvent, useState } from 'react';\nimport CardList from '../card/cards-list.component';\nimport { members } from '../../config/config';\nimport { StyledList, Wrapper, StyledHeader, StyledButton, StyledFooter, StyledConfirmButton, StyledInput, StyledLabel, StyledHeading } from './styles';\nimport Modal from 'react-modal';\nimport CardDataContext from '../../context/card-data.context';\nimport { ContextState } from '../../context/card-data.context';\n\nconst Container = () => {\n\n\tconst customStyles = {\n\t\tcontent: {\n\t\t\ttop: '50%',\n\t\t\tleft: '50%',\n\t\t\tright: 'auto',\n\t\t\tbottom: 'auto',\n\t\t\tmarginRight: '-50%',\n\t\t\ttransform: 'translate(-50%, -50%)',\n\t\t\tboxShadow: '0px 11px 15px -7px rgb(0 0 0 / 20%), 0px 24px 38px 3px rgb(0 0 0 / 14%), 0px 9px 46px 8px rgb(0 0 0 / 12%)'\n\t\t},\n\t};\n\n\n\tconst [modalIsOpen, setIsOpen] = useState(false);\n\tconst [activeIndex, setActiveIndex] = useState(0);\n\tconst [newListItem, setListItem] = useState('');\n\n\tconst savedListData = window.localStorage.getItem(\"listData\");\n\tconst initListData: Array<Array<string>>= typeof savedListData === 'string' ? JSON.parse(savedListData) : new Array(4).fill([]).map(() => new Array(0));\n\tconst [listData, setListData] = useState<string[][]>(initListData);\n\n\tconst value: ContextState = {listData, setListData};\n\n\tconst closeModal = () => {\n\t\tsetListItem(\"\");\n\t\tsetIsOpen(false);\n\t}\n\n\tconst openModal = (index: number) => {\n\t\tsetIsOpen(true);\n\t\tsetActiveIndex(index);\n\t}\n\n\tconst handleAddList = (index: number) => {\n\t\tconsole.log('list added to', index);\n\t\topenModal(index);\n\t}\n\n\tconst updateDialogText = (event: ChangeEvent<HTMLInputElement>) => {\n\t\tconsole.log(event.target.value);\n\t\tsetListItem(event.target.value);\n\t}\n\n\tconst updateList = () => {\n\t\tconsole.log(newListItem);\n\t\tif (newListItem !== '') {\n\t\t\tconsole.log('newList', listData);\n\t\t\tconst newList: Array<Array<string>> = listData;\n\t\t\tnewList[activeIndex].push(newListItem);\n\t\t\tsetListData(newList);\n\t\t\twindow.localStorage.setItem('listData', JSON.stringify(newList));\n\t\t}\n\t\tsetListItem(\"\");\n\t\tsetIsOpen(false);\n\t};\n\n\treturn (<Wrapper>\n\t\t<CardDataContext.Provider value={value}>\n\t\t{members.map((member, index: number = 0) => {\n\t\t\treturn <StyledList>\n\t\t\t\t<StyledHeader color={member.hexCode}>{member.name}</StyledHeader>\n\t\t\t\t<CardList cardsInfo={listData[index]} colIndex={index}></CardList>\n\t\t\t\t<StyledButton onClick={() => handleAddList(index)}>Add a card</StyledButton>\n\t\t\t</StyledList>\n\t\t})}\n\t\t\n\t\t<Modal\n\t\t\tisOpen={modalIsOpen}\n\t\t\tonRequestClose={closeModal}\n\t\t\tcontentLabel=\"Example Modal\"\n\t\t\tstyle={customStyles}\n\t\t>\n\t\t\t<StyledHeading>Add a card in team {members[activeIndex].name}</StyledHeading>\n\t\t\t<StyledLabel htmlFor='cardTxt'>Enter card value:</StyledLabel>\n\t\t\t<StyledInput id='cardTxt' onBlur={(event) => updateDialogText(event)}></StyledInput>\n\t\t\t<StyledFooter>\n\t\t\t\t<StyledConfirmButton onClick={updateList}>ok</StyledConfirmButton>\n\t\t\t\t<StyledConfirmButton onClick={closeModal}>close</StyledConfirmButton>\n\t\t\t</StyledFooter>\n\t\t</Modal>\n\n\t\t</CardDataContext.Provider>\n\t</Wrapper>);\n}\n\nexport default Container;\n"]},"metadata":{},"sourceType":"module"}