{"ast":null,"code":"var _jsxFileName = \"/Users/pragaur2/git/card-app/src/components/header/header.component.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CardList from '../card/cards-list.component';\nimport { members } from './../../config/config';\nimport { StyledList, Wrapper, StyledHeader, StyledButton, StyledFooter, StyledConfirmButton, StyledInput, StyledLabel, StyledHeading } from './styles';\nimport Modal from 'react-modal';\nimport CardDataContext from '../../context/card-data.context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = () => {\n  _s();\n\n  const customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      boxShadow: '0px 11px 15px -7px rgb(0 0 0 / 20%), 0px 24px 38px 3px rgb(0 0 0 / 14%), 0px 9px 46px 8px rgb(0 0 0 / 12%)'\n    }\n  };\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [newListItem, setListItem] = useState('');\n  const savedListData = window.localStorage.getItem(\"listData\");\n  const initListData = typeof savedListData === 'string' ? JSON.parse(savedListData) : new Array(4).fill([]).map(() => new Array(0));\n  const [listData, setListData] = useState(initListData);\n  const value = {\n    listData,\n    setListData\n  };\n\n  const closeModal = () => {\n    setListItem(\"\");\n    setIsOpen(false);\n  };\n\n  const openModal = index => {\n    setIsOpen(true);\n    setActiveIndex(index);\n  };\n\n  const handleAddList = index => {\n    console.log('list added to', index);\n    openModal(index);\n  };\n\n  const updateDialogText = event => {\n    console.log(event.target.value);\n    setListItem(event.target.value);\n  };\n\n  const updateList = () => {\n    console.log(newListItem);\n\n    if (newListItem !== '') {\n      console.log('newList', listData);\n      const newList = listData;\n      newList[activeIndex].push(newListItem);\n      setListData(newList);\n      window.localStorage.setItem('listData', JSON.stringify(newList));\n    }\n\n    setListItem(\"\");\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(CardDataContext.Provider, {\n      value: value,\n      children: [members.map((member, index = 0) => {\n        return /*#__PURE__*/_jsxDEV(StyledList, {\n          children: [/*#__PURE__*/_jsxDEV(StyledHeader, {\n            color: member.hexCode,\n            children: member.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(CardList, {\n            cardsInfo: listData[index],\n            colIndex: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n            onClick: () => handleAddList(index),\n            children: \"Add a card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modalIsOpen,\n        onRequestClose: closeModal,\n        contentLabel: \"Example Modal\",\n        style: customStyles,\n        children: [/*#__PURE__*/_jsxDEV(StyledHeading, {\n          children: [\"Add a card in team \", members[activeIndex].name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(StyledLabel, {\n          htmlFor: \"cardTxt\",\n          children: \"Enter card value:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n          id: \"cardTxt\",\n          onBlur: event => updateDialogText(event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(StyledFooter, {\n          children: [/*#__PURE__*/_jsxDEV(StyledConfirmButton, {\n            onClick: updateList,\n            children: \"ok\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(StyledConfirmButton, {\n            onClick: closeModal,\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Header, \"slyUjLGmQNoQPe73YsNBo4ZXaLA=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/pragaur2/git/card-app/src/components/header/header.component.tsx"],"names":["React","useState","CardList","members","StyledList","Wrapper","StyledHeader","StyledButton","StyledFooter","StyledConfirmButton","StyledInput","StyledLabel","StyledHeading","Modal","CardDataContext","Header","customStyles","content","top","left","right","bottom","marginRight","transform","boxShadow","modalIsOpen","setIsOpen","activeIndex","setActiveIndex","newListItem","setListItem","savedListData","window","localStorage","getItem","initListData","JSON","parse","Array","fill","map","listData","setListData","value","closeModal","openModal","index","handleAddList","console","log","updateDialogText","event","target","updateList","newList","push","setItem","stringify","member","hexCode","name"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useState } from 'react';\nimport CardList from '../card/cards-list.component';\nimport { members } from './../../config/config';\nimport { StyledList, Wrapper, StyledHeader, StyledButton, StyledFooter, StyledConfirmButton, StyledInput, StyledLabel, StyledHeading } from './styles';\nimport Modal from 'react-modal';\nimport CardDataContext from '../../context/card-data.context';\n\nconst Header = () => {\n\n\tconst customStyles = {\n\t\tcontent: {\n\t\t\ttop: '50%',\n\t\t\tleft: '50%',\n\t\t\tright: 'auto',\n\t\t\tbottom: 'auto',\n\t\t\tmarginRight: '-50%',\n\t\t\ttransform: 'translate(-50%, -50%)',\n\t\t\tboxShadow: '0px 11px 15px -7px rgb(0 0 0 / 20%), 0px 24px 38px 3px rgb(0 0 0 / 14%), 0px 9px 46px 8px rgb(0 0 0 / 12%)'\n\t\t},\n\t};\n\n\n\tconst [modalIsOpen, setIsOpen] = useState(false);\n\tconst [activeIndex, setActiveIndex] = useState(0);\n\tconst [newListItem, setListItem] = useState('');\n\n\tconst savedListData = window.localStorage.getItem(\"listData\");\n\tconst initListData: Array<Array<string>>= typeof savedListData === 'string' ? JSON.parse(savedListData) : new Array(4).fill([]).map(() => new Array(0));\n\tconst [listData, setListData] = useState(initListData);\n\n\tconst value = {listData, setListData};\n\n\tconst closeModal = () => {\n\t\tsetListItem(\"\");\n\t\tsetIsOpen(false);\n\t}\n\n\tconst openModal = (index: number) => {\n\t\tsetIsOpen(true);\n\t\tsetActiveIndex(index);\n\t}\n\n\tconst handleAddList = (index: number) => {\n\t\tconsole.log('list added to', index);\n\t\topenModal(index);\n\t}\n\n\tconst updateDialogText = (event: ChangeEvent<HTMLInputElement>) => {\n\t\tconsole.log(event.target.value);\n\t\tsetListItem(event.target.value);\n\t}\n\n\tconst updateList = () => {\n\t\tconsole.log(newListItem);\n\t\tif (newListItem !== '') {\n\t\t\tconsole.log('newList', listData);\n\t\t\tconst newList: Array<Array<string>> = listData;\n\t\t\tnewList[activeIndex].push(newListItem);\n\t\t\tsetListData(newList);\n\t\t\twindow.localStorage.setItem('listData', JSON.stringify(newList));\n\t\t}\n\t\tsetListItem(\"\");\n\t\tsetIsOpen(false);\n\t};\n\n\treturn (<Wrapper>\n\t\t<CardDataContext.Provider value={value}>\n\t\t{members.map((member, index: number = 0) => {\n\t\t\treturn <StyledList>\n\t\t\t\t<StyledHeader color={member.hexCode}>{member.name}</StyledHeader>\n\t\t\t\t<CardList cardsInfo={listData[index]} colIndex={index}></CardList>\n\t\t\t\t<StyledButton onClick={() => handleAddList(index)}>Add a card</StyledButton>\n\t\t\t</StyledList>\n\t\t})}\n\t\t\n\t\t<Modal\n\t\t\tisOpen={modalIsOpen}\n\t\t\tonRequestClose={closeModal}\n\t\t\tcontentLabel=\"Example Modal\"\n\t\t\tstyle={customStyles}\n\t\t>\n\t\t\t<StyledHeading>Add a card in team {members[activeIndex].name}</StyledHeading>\n\t\t\t<StyledLabel htmlFor='cardTxt'>Enter card value:</StyledLabel>\n\t\t\t<StyledInput id='cardTxt' onBlur={(event) => updateDialogText(event)}></StyledInput>\n\t\t\t<StyledFooter>\n\t\t\t\t<StyledConfirmButton onClick={updateList}>ok</StyledConfirmButton>\n\t\t\t\t<StyledConfirmButton onClick={closeModal}>close</StyledConfirmButton>\n\t\t\t</StyledFooter>\n\t\t</Modal>\n\n\t\t</CardDataContext.Provider>\n\t</Wrapper>);\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}