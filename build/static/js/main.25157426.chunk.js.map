{"version":3,"sources":["components/card/styles.tsx","context/card-data.context.tsx","components/card/card.component.tsx","components/card/cards-list.component.tsx","config/config.tsx","components/container/styles.tsx","components/container/container.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ListWrapper","styled","div","StyledCard","StyledBtn","button","CardDataContext","createContext","Card","cardName","pos","currentIndex","React","useContext","listData","setListData","shiftCard","event","direction","value","targetColumn","newList","push","splice","window","localStorage","setItem","JSON","stringify","onClick","CardList","cardsInfo","colIndex","map","card","index","members","name","hexCode","StyledList","StyledHeader","props","color","Wrapper","StyledButton","StyledHeading","h2","StyledFooter","StyledConfirmButton","StyledInput","input","StyledLabel","label","Container","useState","modalIsOpen","setIsOpen","activeIndex","setActiveIndex","newListItem","setListItem","savedListData","getItem","initListData","parse","Array","fill","closeModal","handleAddList","console","log","openModal","Provider","member","isOpen","onRequestClose","contentLabel","style","content","top","left","right","bottom","marginRight","transform","boxShadow","htmlFor","id","onBlur","target","updateDialogText","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25157426.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const ListWrapper = styled.div`\n    // display: flex;\n    // flex-wrap: wrap;\n    // justify-content: space-evenly;\n`;\n\nexport const StyledCard = styled.div`\n    display: block;\n    background-color: #fff;\n    margin-top: 8px;\n    padding: 5px;\n`;\n\nexport const StyledBtn = styled.button`\n    margin: 0 8px;\n    cursor: pointer;\n`;\n","import { createContext, Dispatch, SetStateAction } from 'react';\nexport interface ContextState {\n    listData: string[][],\n    setListData: Dispatch<SetStateAction<string[][]>>\n};\n\nconst CardDataContext = createContext({} as ContextState);\n\nexport default CardDataContext;\n","import React from 'react';\nimport { StyledCard, StyledBtn } from './styles';\nimport CardDataContext from '../../context/card-data.context';\n\nexport default function Card({cardName, pos, currentIndex} : any) {\n    const {listData, setListData} = React.useContext(CardDataContext);\n    const shiftCard = (event: any, pos: number, direction: string) => {\n        const value = listData[pos][currentIndex];\n        const targetColumn = direction === 'left' ? pos - 1 : pos + 1;\n        let newList = {...listData};\n        newList[targetColumn].push(value);\n        newList[pos].splice(currentIndex, 1);\n        window.localStorage.setItem('listData', JSON.stringify(newList));\n        setListData(newList);\n    };\n\n    return (<StyledCard>\n        { !!pos && pos > 0 &&\n            <StyledBtn onClick={event => shiftCard(event, pos, 'left')}>{` < `}</StyledBtn>\n        }\n        <span>{cardName}</span>\n        { pos !== 3 &&\n            <StyledBtn onClick={event => shiftCard(event, pos, 'right')}>{` > `}</StyledBtn>\n        }\n    </StyledCard>);\n}\n","import React from 'react';\nimport Card from './card.component';\nimport { ListWrapper } from './styles';\n\nexport default function CardList({cardsInfo, colIndex}: any) {\n    return (\n        <ListWrapper>\n            {cardsInfo.map((card: string, index: number) => (\n                <Card cardName={card} pos={colIndex} currentIndex={index}></Card>\n            ))}\n        </ListWrapper>\n    );\n}\n","export const members = [\n    {\n        name: 'Winnie',\n        hexCode: '#8e6e95'\n    }, {\n        name: 'Bob',\n        hexCode: '#39a59c'\n    }, {\n        name: 'Thomas',\n        hexCode: '#344759'\n    }, {\n        name: 'George',\n        hexCode: '#e8741e'\n    },\n];\n\n","import styled from 'styled-components';\n\nexport const StyledList = styled.div`\n    flex: 1 1 auto;\n    margin: 25px 25px 0 0;\n`;\n\nexport const StyledHeader = styled.div`\n    background-color: ${(props => props.color)};\n    color: #fff;\n    text-align: center;\n    height: 35px;\n    line-height: 35px;\n`;\n\nexport const Wrapper = styled.div`\n    font-family: 'sans-serif';\n    width: calc(100% - 25px);\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    margin-left: 25px;\n    text-align: left;\n`;\n\nexport const StyledButton = styled.button`\n    margin-top: 8px;\n    cursor: pointer;\n`;\n\nexport const StyledHeading = styled.h2`\n    font-size: 20px;\n    font-family: 'sans-serif';\n`;\n\nexport const StyledFooter = styled.div`\n    text-align: center;\n`;\n\nexport const StyledConfirmButton = styled.button`\n    // background-color: transparent;\n    // border-color: transparent;\n    margin: 25px;\n    width: 100px;\n    height: 35px;\n    font-size: 18px;\n    font-family: 'sans-serif';\n    background-color: #007bff;\n    color: #fff;\n    border-color: #007bff;\n    &:hover {\n        1px solid rgb(0,123,255,0.5)\n    }\n    border: transparent;\n    border-radius: 2px;\n    cursor: pointer;\n`;\n\nexport const StyledInput = styled.input`\n    display: inline-block;\n    margin: 0 10px;\n    height: 25px;\n`;\n\nexport const StyledLabel = styled.label`\n    font-size: 14px;\n    font-family: sans-serif;\n    padding-top: 8px;\n    display: inline-block;\n`;\n","import React, { ChangeEvent, useState } from 'react';\nimport CardList from '../card/cards-list.component';\nimport { members } from '../../config/config';\nimport { StyledList, Wrapper, StyledHeader, StyledButton, StyledFooter, StyledConfirmButton, StyledInput, StyledLabel, StyledHeading } from './styles';\nimport Modal from 'react-modal';\nimport CardDataContext from '../../context/card-data.context';\nimport { ContextState } from '../../context/card-data.context';\n\nconst Container = () => {\n\n\tconst customStyles = {\n\t\tcontent: {\n\t\t\ttop: '50%',\n\t\t\tleft: '50%',\n\t\t\tright: 'auto',\n\t\t\tbottom: 'auto',\n\t\t\tmarginRight: '-50%',\n\t\t\ttransform: 'translate(-50%, -50%)',\n\t\t\tboxShadow: '0px 11px 15px -7px rgb(0 0 0 / 20%), 0px 24px 38px 3px rgb(0 0 0 / 14%), 0px 9px 46px 8px rgb(0 0 0 / 12%)'\n\t\t},\n\t};\n\n\n\tconst [modalIsOpen, setIsOpen] = useState(false);\n\tconst [activeIndex, setActiveIndex] = useState(0);\n\tconst [newListItem, setListItem] = useState('');\n\n\tconst savedListData = window.localStorage.getItem(\"listData\");\n\tconst initListData: Array<Array<string>>= typeof savedListData === 'string' ? JSON.parse(savedListData) : new Array(4).fill([]).map(() => new Array(0));\n\tconst [listData, setListData] = useState<string[][]>(initListData);\n\n\tconst value: ContextState = {listData, setListData};\n\n\tconst closeModal = () => {\n\t\tsetListItem(\"\");\n\t\tsetIsOpen(false);\n\t}\n\n\tconst openModal = (index: number) => {\n\t\tsetIsOpen(true);\n\t\tsetActiveIndex(index);\n\t}\n\n\tconst handleAddList = (index: number) => {\n\t\tconsole.log('list added to', index);\n\t\topenModal(index);\n\t}\n\n\tconst updateDialogText = (event: ChangeEvent<HTMLInputElement>) => {\n\t\tconsole.log(event.target.value);\n\t\tsetListItem(event.target.value);\n\t}\n\n\tconst updateList = () => {\n\t\tconsole.log(newListItem);\n\t\tif (newListItem !== '') {\n\t\t\tconsole.log('newList', listData);\n\t\t\tconst newList: Array<Array<string>> = listData;\n\t\t\tnewList[activeIndex].push(newListItem);\n\t\t\tsetListData(newList);\n\t\t\twindow.localStorage.setItem('listData', JSON.stringify(newList));\n\t\t}\n\t\tsetListItem(\"\");\n\t\tsetIsOpen(false);\n\t};\n\n\treturn (<Wrapper>\n\t\t<CardDataContext.Provider value={value}>\n\t\t{members.map((member, index: number = 0) => {\n\t\t\treturn <StyledList>\n\t\t\t\t<StyledHeader color={member.hexCode}>{member.name}</StyledHeader>\n\t\t\t\t<CardList cardsInfo={listData[index]} colIndex={index}></CardList>\n\t\t\t\t<StyledButton onClick={() => handleAddList(index)}>Add a card</StyledButton>\n\t\t\t</StyledList>\n\t\t})}\n\t\t\n\t\t<Modal\n\t\t\tisOpen={modalIsOpen}\n\t\t\tonRequestClose={closeModal}\n\t\t\tcontentLabel=\"Example Modal\"\n\t\t\tstyle={customStyles}\n\t\t>\n\t\t\t<StyledHeading>Add a card in team {members[activeIndex].name}</StyledHeading>\n\t\t\t<StyledLabel htmlFor='cardTxt'>Enter card value:</StyledLabel>\n\t\t\t<StyledInput id='cardTxt' onBlur={(event) => updateDialogText(event)}></StyledInput>\n\t\t\t<StyledFooter>\n\t\t\t\t<StyledConfirmButton onClick={updateList}>ok</StyledConfirmButton>\n\t\t\t\t<StyledConfirmButton onClick={closeModal}>close</StyledConfirmButton>\n\t\t\t</StyledFooter>\n\t\t</Modal>\n\n\t\t</CardDataContext.Provider>\n\t</Wrapper>);\n}\n\nexport default Container;\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Container from './components/container/container.component';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}